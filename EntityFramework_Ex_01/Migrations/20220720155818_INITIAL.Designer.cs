// <auto-generated />
using System;
using EntityFramework_Ex_01.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework_Ex_01.Migrations
{
    [DbContext(typeof(ProductionContext))]
    [Migration("20220720155818_INITIAL")]
    partial class INITIAL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Actor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductionId")
                        .HasColumnType("int");

                    b.Property<int>("ProfuctionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("ProductionId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Release")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Productions");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Production");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductionId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Movie", b =>
                {
                    b.HasBaseType("EntityFramework_Ex_01.Models.Production");

                    b.Property<int>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("WorldWideBoxOfficeGross")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Movie");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Series", b =>
                {
                    b.HasBaseType("EntityFramework_Ex_01.Models.Production");

                    b.Property<int>("NumberofEpisodes")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Series");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Character", b =>
                {
                    b.HasOne("EntityFramework_Ex_01.Models.Actor", "Actor")
                        .WithMany("Characters")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFramework_Ex_01.Models.Production", "Production")
                        .WithMany("Character")
                        .HasForeignKey("ProductionId");

                    b.Navigation("Actor");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Rating", b =>
                {
                    b.HasOne("EntityFramework_Ex_01.Models.Production", "Production")
                        .WithMany("Rating")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Production");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Actor", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("EntityFramework_Ex_01.Models.Production", b =>
                {
                    b.Navigation("Character");

                    b.Navigation("Rating");
                });
#pragma warning restore 612, 618
        }
    }
}
